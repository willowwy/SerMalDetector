import { Class, Function, Identifier, Node } from "@babel/types";
import { FilePath } from "../misc/util";
import { ConstraintVar, NodeVar } from "./constraintvars";
import { Token } from "./tokens";
import { PackageJsonInfo } from "../misc/packagejson";
import { AccessPath } from "./accesspaths";
import Timer from "../misc/timer";
import { VulnerabilityDetector } from "../patternmatching/vulnerabilitydetector";
import { SpecialNativeObjects } from "../natives/nativebuilder";
import { DummyModuleInfo, FunctionInfo, ModuleInfo, PackageInfo } from "./infos";
import { NodePath } from "@babel/traverse";
import { TSModuleResolver } from "../typescript/moduleresolver";
export declare class GlobalState {
    readonly canonicalConstraintVars: Map<string, ConstraintVar>;
    private canonicalAncestorVars;
    private canonicalReturnVar;
    private canonicalThisVar;
    readonly canonicalNodeVars: WeakMap<Node, NodeVar>;
    readonly canonicalTokens: Map<string, Token>;
    private canonicalUnknownAccessPathToken;
    private canonicalIgnoredAccessPathToken;
    private canonicalNativeObjectTokens;
    readonly canonicalAccessPaths: Map<string, AccessPath>;
    readonly canonicalGlobals: Map<string, Identifier>;
    readonly packageInfos: Map<string, PackageInfo>;
    readonly moduleInfosByPath: Map<FilePath, ModuleInfo>;
    readonly moduleInfos: Map<string, ModuleInfo>;
    readonly dummyModuleInfos: Map<string, DummyModuleInfo>;
    readonly functionInfos: Map<Function, FunctionInfo>;
    readonly entryFiles: Set<FilePath>;
    readonly reachedFiles: Set<FilePath>;
    readonly pendingFiles: Array<FilePath>;
    readonly filesWithParseErrors: Array<FilePath>;
    readonly filesAnalyzed: Array<FilePath>;
    readonly timeoutTimer: Timer;
    readonly packageJsonInfos: Map<string, PackageJsonInfo>;
    readonly tsModuleResolver: TSModuleResolver;
    numberOfCanonicalizeVarCalls: number;
    numberOfCanonicalizeTokenCalls: number;
    numberOfCanonicalizeAccessPathCalls: number;
    vulnerabilities: VulnerabilityDetector | undefined;
    globalSpecialNatives: SpecialNativeObjects | undefined;
    canonicalizeVar<T extends ConstraintVar>(v: T): T;
    canonicalizeToken<T extends Token>(t: T): T;
    canonicalizeAccessPath<T extends AccessPath>(t: T): T;
    getModuleInfo(file: FilePath): ModuleInfo;
    registerFunctionInfo(file: FilePath, path: NodePath<Function | Class>, name: string | undefined, fun: Function): void;
    reachedFile(tofile: FilePath, from?: ModuleInfo): ModuleInfo;
    getEnclosingFunctionOrModule(path: NodePath, moduleInfo: ModuleInfo): FunctionInfo | ModuleInfo;
    getConstraintVarParent(v: ConstraintVar): PackageInfo | ModuleInfo | undefined;
}
