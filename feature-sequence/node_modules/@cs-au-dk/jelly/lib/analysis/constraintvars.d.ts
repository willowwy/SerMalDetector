import { Function, Node } from "@babel/types";
import { AllocationSiteToken, FunctionToken, NativeObjectToken, PackageObjectToken, Token } from "./tokens";
import { ModuleInfo, PackageInfo } from "./infos";
import Solver from "./solver";
export declare abstract class ConstraintVar {
    abstract toString(): string;
    abstract getParent(): Node | PackageInfo | ModuleInfo | undefined;
    getKind(): string;
}
export declare class NodeVar extends ConstraintVar {
    readonly node: Node;
    constructor(node: Node);
    toString(): string;
    getParent(): Node;
    getKind(): string;
}
export type AccessorType = "get" | "set" | "normal";
export type ObjectPropertyVarObj = AllocationSiteToken | FunctionToken | NativeObjectToken | PackageObjectToken;
export declare function isObjectPropertyVarObj(t: Token): t is ObjectPropertyVarObj;
export declare class ObjectPropertyVar extends ConstraintVar {
    readonly obj: ObjectPropertyVarObj;
    readonly prop: string;
    readonly accessor: AccessorType;
    private constructor();
    static make(solver: Solver, obj: ObjectPropertyVarObj, prop: string, accessor?: AccessorType): ObjectPropertyVar;
    toString(): string;
    getParent(): Node | PackageInfo | ModuleInfo | undefined;
}
export declare class FunctionReturnVar extends ConstraintVar {
    readonly fun: Function;
    constructor(fun: Function);
    toString(): string;
    getParent(): Node;
}
export declare class ThisVar extends ConstraintVar {
    readonly fun: Function;
    constructor(fun: Function);
    toString(): string;
    getParent(): Node;
}
export declare class ArgumentsVar extends ConstraintVar {
    readonly fun: Function;
    constructor(fun: Function);
    toString(): string;
    getParent(): Node;
}
export declare class IntermediateVar extends ConstraintVar {
    readonly node: Node;
    readonly label: string;
    constructor(node: Node, label: string);
    toString(): string;
    getParent(): Node;
}
export declare class AncestorsVar extends ConstraintVar {
    readonly t: ObjectPropertyVarObj;
    constructor(t: ObjectPropertyVarObj);
    toString(): string;
    getParent(): Node | PackageInfo | ModuleInfo | undefined;
}
export declare class ReadResultVar extends ConstraintVar {
    readonly t: ObjectPropertyVarObj;
    readonly prop: string;
    constructor(t: ObjectPropertyVarObj, prop: string);
    toString(): string;
    getParent(): Node | PackageInfo | ModuleInfo | undefined;
}
