import { DummyModuleInfo, ModuleInfo } from "./infos";
import { ConstraintVar } from "./constraintvars";
export declare abstract class AccessPath {
    private readonly str;
    protected constructor(str: string);
    toString(): string;
}
export declare class ModuleAccessPath extends AccessPath {
    readonly moduleInfo: ModuleInfo | DummyModuleInfo;
    readonly requireName: string | undefined;
    constructor(moduleInfo: ModuleInfo | DummyModuleInfo, requireName: string);
}
export declare class PropertyAccessPath extends AccessPath {
    readonly base: ConstraintVar;
    readonly prop: string;
    constructor(base: ConstraintVar, prop: string);
}
export declare class CallResultAccessPath extends AccessPath {
    readonly caller: ConstraintVar;
    constructor(caller: ConstraintVar);
}
export declare class ComponentAccessPath extends AccessPath {
    readonly component: ConstraintVar;
    constructor(component: ConstraintVar);
}
export declare class IgnoredAccessPath extends AccessPath {
    static instance: IgnoredAccessPath;
    constructor();
}
export declare class UnknownAccessPath extends AccessPath {
    static instance: UnknownAccessPath;
    constructor();
}
