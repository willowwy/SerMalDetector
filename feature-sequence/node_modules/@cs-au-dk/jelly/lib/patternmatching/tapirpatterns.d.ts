import { Match, PatchType, PatternWrapper, SemanticPatch } from "../typings/tapir";
import { DetectionPattern } from "./patterns";
import { TypeScriptTypeInferrer } from "../typescript/typeinferrer";
import Solver from "../analysis/solver";
export declare function tapirLoadPatterns(patternFiles: Array<string>): [Array<PatternWrapper | SemanticPatch>, Array<DetectionPattern | undefined>];
export declare function tapirPatternMatch(tapirPatterns: Array<PatternWrapper | SemanticPatch>, patterns: Array<DetectionPattern | undefined>, solver: Solver, typer?: TypeScriptTypeInferrer, expected?: (PatchType | Match)[]): {
    matches: number;
    matchesLow: number;
    expectedMatches: number;
    unexpectedMatches: number;
    misses: number;
    expectedLow: number;
    expectedHigh: number;
    unexpectedLow: number;
    unexpectedHigh: number;
    matchesTapirFalsePositives: number;
    missesTapirFalsePositives: number;
    missesParseErrors: number;
    missesFileNotAnalyzed: number;
};
