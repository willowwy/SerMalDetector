"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeoutException = void 0;
const process_1 = require("process");
const options_1 = require("../options");
class Timer {
    startTime;
    startUsage;
    constructor() {
        this.startTime = new Date();
        this.startUsage = (0, process_1.cpuUsage)();
    }
    elapsed() {
        return new Date().getTime() - this.startTime.getTime();
    }
    elapsedCPU() {
        const u = (0, process_1.cpuUsage)(this.startUsage);
        return Math.round((u.user + u.system) / 1000);
    }
    checkTimeout() {
        if (options_1.options.timeout && this.elapsed() > options_1.options.timeout * 1000)
            throw new TimeoutException();
    }
}
exports.default = Timer;
class TimeoutException extends Error {
    constructor() {
        super("Analysis time limit exceeded");
    }
}
exports.TimeoutException = TimeoutException;
//# sourceMappingURL=timer.js.map